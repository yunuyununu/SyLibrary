<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="checkout">
<!-- b_id → 대출상태인 책 권수 -->
<select id="loCount" resultType="int">
select count(*) from lo_book
	where L_RETURN_YN='N' and L_BOOKID=#{b_id}
</select>

<select id="reCount" resultType="int">
select count(*) from re_book
	where R_BOOKID=#{b_id}
		and r_reservation <![CDATA[>=]]> 0
</select>

<select id="call_CheckLoan" statementType="CALLABLE">
	{call check_loan(#{m_id})}
</select>

<!-- b_id → 가장 빠른 대출예정일 조회 -->
<select id="retDate" resultType="String">
select A.*
from
    (select to_char(l_retdate, 'yyyy-mm-dd')  be_return
    from lo_book
    where L_RETURN_YN='N' and l_bookid=#{b_id}) A
where be_return > sysdate and rownum=1
</select>


<!-- 대출내역리스트(lo_book)에 데이터 추가 -->
<insert id="insert_Lobook" parameterType="map">
insert into lo_book(l_num, l_memno, l_bookid)
values (lo_book_seq.nextval, 
	(select m_no from sl_member where m_id=#{m_id}), 
	#{b_id})
</insert>

<!-- 사용자가 현재 대출중인 책 권수 -->
<select id="cntUserLo">
select count(L_BOOKID)
from (select * from lo_book
      where L_RETURN_YN='N')
where L_MEMNO=(select m_no from sl_member where m_id=#{m_id})
</select>

<select id="check_mLoan" resultType="int">
select m_loan from sl_member where m_id=#{m_id}
</select>

<!-- 동일한 책을 기존에 대출중인지 확인 -->
<select id="check_duplicate" resultType="int">
select count(*)
from (select * from lo_all_book where m_id=#{m_id} and l_return_yn='N')
where l_bookid=#{b_id}
</select>
</mapper>